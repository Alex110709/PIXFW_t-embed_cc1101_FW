name: Build T-Embed CC1101 Firmware

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache ESP-IDF
      uses: actions/cache@v3
      with:
        path: |
          ~/.espressif
          ~/esp-idf
        key: ${{ runner.os }}-esp-idf-${{ hashFiles('.github/workflows/build.yml') }}
        restore-keys: |
          ${{ runner.os }}-esp-idf-
          
    - name: Install ESP-IDF
      run: |
        cd ~
        git clone --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf
        git checkout v4.4.2
        ./install.sh esp32s3
        
    - name: Build firmware
      run: |
        source ~/esp-idf/export.sh
        ./build.sh configure
        ./build.sh build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-${{ github.sha }}
        path: |
          build/*.bin
          build/*.elf
          build/bootloader/bootloader.bin
          build/partition_table/partition-table.bin
          
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        source ~/esp-idf/export.sh
        ./build.sh release ${{ github.ref_name }}
        
    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: release-${{ github.ref_name }}
        path: release/
        
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run static analysis
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-format
        make analyze
        
    - name: Check code formatting
      run: |
        make format
        git diff --exit-code || (echo "Code is not properly formatted" && exit 1)
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: cpp
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2